package kalgo

import (
	"fmt"
	"os"
	"os/exec"
	"path/filepath"
)

type Env struct {
	AlgodAddress string
	AlgodToken string
	SpeculationToken string
	SourcePrefix string
}

type Program struct {
	Name string
	Source []byte
}

func saveToDisk(pgm Program, root string) (*os.File, error) {
	// Writes the source file to a file with the pattern
	//    ./tests/clarity/{speculation_token}.{random}/{speculation_token}.{random}.clar
	// where {random} is a random string generated by TempDir.

	dirpath := filepath.Join(root, pgm.Name)
	err := os.MkdirAll(dirpath, 0755)
	if err != nil {
		return nil, err
	}
	path := filepath.Join(dirpath, fmt.Sprintf("%s.clar", pgm.Name))
	file, err := os.Create(path)
	if err != nil {
		return nil, err
	}
	if _, err := file.Write(pgm.Source); err != nil {
		return nil, err
	}
	if err := file.Close(); err != nil {
		return nil, err
	}
	return file, err
}

func Interpret(env Env, pgm Program) error {
	file, err := saveToDisk(pgm, env.SourcePrefix)
	if err != nil {
		return err
	}

	cmd := exec.Command("./kalgo", "init", "--prefix", env.SourcePrefix, file.Name())
	cmd.Dir = os.Getenv("KALGO_PREFIX")
	cmd.Env = append(os.Environ(),
		"ALGOD_ADDRESS=" + env.AlgodAddress,
		"ALGOD_TOKEN=" + env.AlgodToken,
		"SPECULATION_TOKEN=" + env.SpeculationToken,
	)
	return cmd.Run()
}
